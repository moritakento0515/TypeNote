"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import environ  

# BASE_DIRの定義(#Django 3.1 以降では、pathlib を使う方法が推奨されている)
BASE_DIR = Path(__file__).resolve().parent.parent

# django-environの初期化(デフォルト値の設定可能)
env = environ.Env(
    DEBUG=(bool, False)
)

# .envファイルの読み込み
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# SECRET_KEY, DEBUG, ALLOWED_HOSTS の設定(.envファイルから読み込む)
SECRET_KEY = env('SECRET_KEY')
DEBUG = env.bool('DEBUG')
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[])

# Application definition
INSTALLED_APPS = [
    'widget_tweaks',
    'tracker',
    'accounts',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database の設定(.envファイルから読み込む)
DATABASES = {
    'default': {
        'ENGINE': env('DATABASE_ENGINE'),
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASSWORD'),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

BASE_DIR = Path(__file__).resolve().parent.parent 

# 静的ファイルのURLパス
STATIC_URL = '/static/'

# collectstatic コマンドで静的ファイルを収集するディレクトリ
STATIC_ROOT = BASE_DIR / 'staticfiles'

# 開発環境でDjangoが静的ファイルを探すディレクトリ（必須でない場合は削除可）
STATICFILES_DIRS = [BASE_DIR / 'static']


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#ログアウト後のリダイレクト先
#最初に/をつけないと、現在のURLからの相対パスとして解釈されるので注意
#LOGOUT_REDIRECT_URL = '/accounts/login/'  

# -------------------------------------------------------------------
# HTTPS環境下でのCSRFとCookieセキュリティ強化設定
# -------------------------------------------------------------------

# “信頼できる”オリジンとして HTTPS ドメインを明示
CSRF_TRUSTED_ORIGINS = [
    "https://your-domain.com",
    # 開発環境で localhost の HTTPS を使う場合は以下も追加
    "https://localhost:8000",
]

# クッキーを HTTPS 通信のみに限定
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE    = True

# X-Forwarded-Proto ヘッダーを信頼して HTTPS 判定
# （リバースプロキシ／ロードバランサ越しのとき）
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# （オプション）全 HTTP リクエストを HTTPS にリダイレクト
SECURE_SSL_REDIRECT = True