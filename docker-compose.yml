version: '3.10'
services:
  web:
    build: .
    container_name: django_web
    restart: always
    volumes:
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: django_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - ./media:/app/media
      - certs:/etc/letsencrypt          # 証明書用ボリューム
      # ★ webroot 認証用の共有ボリュームを追加
      - certbot_challenge:/var/www/certbot
      # ↓ /var/lib/letsencrypt は webroot では必須ではないので削除してもOK (残しても可)
      # - certs:/var/lib/letsencrypt
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certs:/etc/letsencrypt            # 証明書を書き込むボリューム
      # ★ webroot 認証用の共有ボリュームを追加
      - certbot_challenge:/var/www/certbot
      # ↓ /var/lib/letsencrypt は webroot では必須ではないので削除してもOK (残しても可)
      # - certs:/var/lib/letsencrypt
    # ★ entrypoint を webroot 認証用に変更
    entrypoint: >
      sh -c "certbot certonly --webroot \
             -w /var/www/certbot \
             --non-interactive --agree-tos \
             -m example.com \
            # 本番環境で変更

             -d www.type-note.com \
             && cp -Lrf /etc/letsencrypt/live /etc/letsencrypt.backup"
      # ↑ ドメイン名 (-d) とメールアドレス (-m) が正しいか確認
      # ↑ www なしも使う場合は `-d www.type-note.com -d type-note.com \` のように追記

volumes:
  static_volume:
  certs:                            # 証明書用ボリューム
  # ★ webroot 認証用のボリューム定義を追加
  certbot_challenge: